version: "3"

services:
  vpn:
    container_name: vpn
    image: dperson/openvpn-client:latest
    cap_add:
      - net_admin # required to modify network interfaces
    restart: unless-stopped
    volumes:
      - /dev/net:/dev/net:z # tun device
      - ${ROOT}/config/vpn:/vpn # OpenVPN configuration
    security_opt:
      - label:disable
    ports:
      - 8112:8112 # port for deluge web UI to be reachable from local network
    command: "-r 192.168.1.0/24" # route local network traffic
    labels:
      - "docker-compose-watcher.watch=1"
      - "docker-compose-watcher.dir=/mnt/user/appdata/mediastack"
    logging:
      options:
        max-size: "5m"
        max-file: "2"

  deluge:
    container_name: deluge
    image: linuxserver/deluge:latest
    restart: always
    network_mode: service:vpn # run on the vpn network
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - ${ROOT}/downloads:/downloads # downloads folder
      - ${ROOT}/config/deluge:/config # config files
    labels:
      - "docker-compose-watcher.watch=1"
      - "docker-compose-watcher.dir=/mnt/user/appdata/mediastack"
    logging:
      options:
        max-size: "5m"
        max-file: "1"

  jackett:
    container_name: jackett
    image: linuxserver/jackett:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${ROOT}/downloads/torrent-blackhole:/downloads # place where to put .torrent files for manual download
      - ${ROOT}/config/jackett:/config # config files
    labels:
      - "docker-compose-watcher.watch=1"
      - "docker-compose-watcher.dir=/mnt/user/appdata/mediastack"
    logging:
      options:
        max-size: "1m"
        max-file: "1"

  plex-server:
    container_name: plex-server
    image: plexinc/pms-docker:latest
    restart: unless-stopped
    environment:
      - TZ=${TZ} # timezone, defined in .env
    network_mode: host
    volumes:
      - ${ROOT}/config/plex/db:/config # plex database
      - ${ROOT}/config/plex/transcode:/transcode # temp transcoded files
      - ${ROOT}/complete:/data # media library
    labels:
      - "docker-compose-watcher.watch=1"
      - "docker-compose-watcher.dir=/mnt/user/appdata/mediastack"
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${ROOT}/config/sonarr:/config # config files
      - ${ROOT}/complete/tv:/tv # tv shows folder
      - ${ROOT}/complete/tv_parents:/tv_parents
      - ${ROOT}/downloads:/downloads # download folder
    labels:
      - "docker-compose-watcher.watch=1"
      - "docker-compose-watcher.dir=/mnt/user/appdata/mediastack"
    logging:
      options:
        max-size: "10m"
        max-file: "2"

  radarr:
    container_name: radarr
    image: linuxserver/radarr:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${ROOT}/config/radarr:/config # config files
      - ${ROOT}/complete/movies:/movies # movies folder
      - ${ROOT}/complete/movies_parents:/movies_parents
      - ${ROOT}/downloads:/downloads # download folder
    labels:
      - "docker-compose-watcher.watch=1"
      - "docker-compose-watcher.dir=/mnt/user/appdata/mediastack"
    logging:
      options:
        max-size: "10m"
        max-file: "2"

#  flaresolverr:
#    # DockerHub mirror flaresolverr/flaresolverr:latest
#    image: ghcr.io/flaresolverr/flaresolverr:latest
#    container_name: flaresolverr
#    environment:
#      - LOG_LEVEL=${LOG_LEVEL:-info}
#      - LOG_HTML=${LOG_HTML:-false}
#      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
#      - TZ=Europe/London
#    ports:
#      - "${PORT:-8191}:8191"
#    restart: unless-stopped

#  mylar:
#    container_name: mylar3
#    image: ghcr.io/linuxserver/mylar3
#    environment:
#      - TZ=${TZ}
#      - PUID=1000
#      - PGID=1000
#    volumes:
#      - ${ROOT}/config/mylar:/config
#      - ${ROOT}/complete/comics:/comics
#      - ${ROOT}/downloads:/downloads
#    restart: unless-stopped
#    network_mode: host
#    labels:
#      - "docker-compose-watcher.watch=1"
#      - "docker-compose-watcher.dir=/mnt/user/appdata/mediastack"

#  organizr:
#    image: organizr/organizr
#    container_name: organizr
#    environment:
#      - PUID=${PUID}
#      - PGID=${PGID}
#      - TZ=${TZ}
#    volumes:
#      - ${ROOT}:/config
  #  ports:
 #     - 9983:80
#    restart: unless-stopped